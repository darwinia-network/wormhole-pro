name: Test

on:
  pull_request:
    branches: [master]

jobs:
  test-e2e:
    name: E2E
    runs-on: ubuntu-latest
    outputs:
      check-ok: ${{ steps.output-ok.outputs.STATUS }}
      check-err: ${{ steps.output-err.outputs.STATUS }}
    container:
      image: cypress/browsers:node14.17.0-chrome88-ff89
      options: --privileged
    steps:
      - uses: actions/checkout@v2
#      - name: Run E2E tests ðŸ§ª
#        uses: cypress-io/github-action@v2
#        with:
#          start: yarn start:dev
#          wait-on: 'http://localhost:3007'
#          wait-on-timeout: 300
#          command: yarn test:e2e:ci
#          record: true
#          parallel: true
#          browser: chrome
#          cache-key: ${{ runner.os }}-hash-${{ hashFiles('yarn.lock') }}
#          group: 'Actions example'
#        env:
#          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: e2e-screenshots
          path: cypress/screenshots

      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: e2e-videos
          path: cypress/videos

      - id: output-ok
        run: echo "::set-output name=STATUS::ok"
      - id: output-err
        if: failure()
        run: echo "::set-output name=STATUS::err"

  test-unit:
    name: Uint
    runs-on: ubuntu-latest
    outputs:
      check-ok: ${{ steps.output-ok.outputs.STATUS }}
      check-err: ${{ steps.output-err.outputs.STATUS }}
    container:
      image: cypress/browsers:node14.17.0-chrome88-ff89
      options: --privileged
    steps:
      - uses: actions/checkout@v2
#      - name: Run Unit tests ðŸ§ª
#        uses: cypress-io/github-action@v2
#        with:
#          command: yarn test:unit:ci
#          record: true
#          browser: chrome
#          group: 'Actions example'
#        env:
#          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

      - name: Test error exit
        run: exit 1

      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: unit-screenshots
          path: cypress/screenshots

      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: unit-videos
          path: cypress/videos

      - id: output-ok
        run: echo "::set-output name=STATUS::ok"
      - id: output-err
        if: failure()
        run: echo "::set-output name=STATUS::err"

  completed-test:
    name: Completed test
    runs-on: ubuntu-latest
    needs: [test-e2e, test-unit]
    if: always()
    steps:
      - uses: actions/checkout@v2

      - name: Test status
        id: test-status
        run: |
          E2E_OK='ðŸ’™ ${{ needs.test-e2e.outputs.check-ok }}'
          E2E_ERR='ðŸ”´ ${{ needs.test-e2e.outputs.check-err }}'
          UNIT_OK='ðŸ’™ ${{ needs.test-unit.outputs.check-ok }}'
          UNIT_ERR='ðŸ”´ ${{ needs.test-unit.outputs.check-err }}'
          E2E_STATUS=${E2E_OK:-$E2E_ERR}
          UNIT_STATUS=${UNIT_OK:-$UNIT_ERR}

          SHA='${{github.event.pull_request.head.sha}}'
          SHA=${SHA::7}
          COMMIT="[${SHA}](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${SHA})"

          echo "::set-output name=E2E_STATUS::${E2E_STATUS}"
          echo "::set-output name=UNIT_STATUS::${UNIT_STATUS}"
          echo "::set-output name=COMMIT::${COMMIT}"

      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          append: true
          message: |
            \---
            Commit: ${{ steps.test-status.outputs.COMMIT }}
            E2E: ${{ steps.test-status.outputs.E2E_STATUS }}
            Unit: ${{ steps.test-status.outputs.UNIT_STATUS }}

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: wormhole-ui
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://avatars.githubusercontent.com/u/14985020?s=48&v=4
          SLACK_MESSAGE: |
            E2e: ${{ steps.test-status.outputs.E2E_STATUS }}
            Unit: ${{ steps.test-status.outputs.UNIT_STATUS }}
          SLACK_TITLE: Cypress
          SLACK_USERNAME: Vercel
          SLACK_WEBHOOK: ${{ secrets.SLACK_INCOMING_WEBHOOK_URL }}


